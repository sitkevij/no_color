name: CI
on:
  pull_request:
    branches:
      - develop/*
      - develop
      - main

  push:
    branches:
      - develop/*
      - develop
      - main

env:
  RUST_BACKTRACE: full

jobs:
  test:
    name: Test Rust ${{ matrix.name }} on ${{ matrix.target }}
    runs-on: ${{ matrix.runner }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            experimental: false
            toolchain: stable
          - name: win-amd64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
            experimental: false
            toolchain: stable
          - name: macos-amd64
            runner: macos-latest
            target: x86_64-apple-darwin
            experimental: false
            toolchain: stable
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin
            experimental: false
            toolchain: stable
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            experimental: true
            toolchain: beta
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            experimental: true
            toolchain: nightly
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "${{ matrix.toolchain }}"
          targets: "${{ matrix.target }}"
      - run: cargo build --verbose --all
      - run: cargo build --release
      - run: cargo test --verbose --all -- --nocapture
      # - run: cargo test --verbose --workspace --all-features
      # - run: cargo test --verbose --workspace --no-default-features
      # see https://github.com/actions/upload-release-asset

  clippy:
    name: Lint with clippy
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: cargo clippy --workspace --all-targets --verbose
      - run: cargo clippy --workspace --all-targets --verbose --no-default-features
      - run: cargo clippy --workspace --all-targets --verbose --all-features

  rustfmt:
    name: Verify code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check
