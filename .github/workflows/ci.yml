name: CI
on:
  pull_request:
    branches:
      - develop
      - main

  push:
    branches:
      - develop
      - main

env:
  RUST_BACKTRACE: full

jobs:
  test:
    name: Test Rust ${{ matrix.rust }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { rust: stable, os: ubuntu-latest, experimental: false }
          - { rust: stable, os: macos-latest, experimental: false }
          - { rust: stable, os: windows-latest, experimental: true }
          - { rust: stable-i686-msvc, os: windows-latest, experimental: true }
          - { rust: beta, os: ubuntu-latest, experimental: true }
          - { rust: nightly, os: ubuntu-latest, experimental: true }
    steps:
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}

      - run: cargo build --verbose --all
      - run: cargo build --release
      - run: cargo test --verbose --all -- --nocapture
      # - run: cargo test --verbose --workspace --all-features
      # - run: cargo test --verbose --workspace --no-default-features
      # see https://github.com/actions/upload-release-asset

  clippy:
    name: Lint with clippy
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          components: clippy
      - run: cargo clippy --workspace --all-targets --verbose
      - run: cargo clippy --workspace --all-targets --verbose --no-default-features
      - run: cargo clippy --workspace --all-targets --verbose --all-features

  rustfmt:
    name: Verify code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check
